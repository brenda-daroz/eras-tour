{"ast":null,"code":"const handleAlbums = async () => {\n  const response = await fetch('http://localhost:3000/albums');\n  const data = await response.json();\n  return data;\n};\nexport default handleAlbums;\n\n// PUT request using fetch with async/await\nasync function updatePost() {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title: 'React Hooks PUT Request Example'\n    })\n  };\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts/1', requestOptions);\n  const data = await response.json();\n  setPostId(data.id);\n}","map":{"version":3,"names":["handleAlbums","response","fetch","data","json","updatePost","requestOptions","method","headers","body","JSON","stringify","title","setPostId","id"],"sources":["/Users/brenda/code/brenda-daroz/eras-tour/src/services/handleAlbums.js"],"sourcesContent":["const handleAlbums = async () => {\n  const response = await fetch('http://localhost:3000/albums')\n  const data = await response.json()\n  return data\n}\n\nexport default handleAlbums\n\n\n  // PUT request using fetch with async/await\n  async function updatePost() {\n      const requestOptions = {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ title: 'React Hooks PUT Request Example' })\n      };\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts/1', requestOptions);\n      const data = await response.json();\n      setPostId(data.id);\n  }\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI;AACb,CAAC;AAED,eAAeH,YAAY;;AAGzB;AACA,eAAeK,UAAUA,CAAA,EAAG;EACxB,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,KAAK,EAAE;IAAkC,CAAC;EACrE,CAAC;EACD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAEI,cAAc,CAAC;EAC5F,MAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClCS,SAAS,CAACV,IAAI,CAACW,EAAE,CAAC;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}