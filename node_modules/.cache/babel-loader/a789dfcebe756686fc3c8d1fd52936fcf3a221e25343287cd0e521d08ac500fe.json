{"ast":null,"code":"const handleAlbums = async () => {\n  const response = await fetch('http://localhost:3000/albums');\n  const data = await response.json();\n  return data;\n};\n\n// PUT request using fetch with async/await\nasync function updatePost() {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      special: \"test\"\n    })\n  };\n  const response = await fetch('http://localhost:3000/albums/1', requestOptions);\n  const data = await response.json();\n  return data;\n}\nexport { handleAlbums, updatePost };","map":{"version":3,"names":["handleAlbums","response","fetch","data","json","updatePost","requestOptions","method","headers","body","JSON","stringify","special"],"sources":["/Users/brenda/code/brenda-daroz/eras-tour/src/services/handleAlbums.js"],"sourcesContent":["const handleAlbums = async () => {\n  const response = await fetch('http://localhost:3000/albums')\n  const data = await response.json()\n  return data\n}\n\n  // PUT request using fetch with async/await\n  async function updatePost() {\n      const requestOptions = {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ special: \"test\" })\n      };\n      const response = await fetch('http://localhost:3000/albums/1', requestOptions);\n      const data = await response.json();\n      return data\n  }\n\nexport {handleAlbums, updatePost}\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI;AACb,CAAC;;AAEC;AACA,eAAeE,UAAUA,CAAA,EAAG;EACxB,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAO,CAAC;EAC5C,CAAC;EACD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAEI,cAAc,CAAC;EAC9E,MAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI;AACf;AAEF,SAAQH,YAAY,EAAEK,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}