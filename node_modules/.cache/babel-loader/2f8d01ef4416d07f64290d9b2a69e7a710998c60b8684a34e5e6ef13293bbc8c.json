{"ast":null,"code":"const handleAlbums = async () => {\n  const response = await fetch('http://localhost:3000/albums');\n  const data = await response.json();\n  return data;\n};\nconst handleData = async () => {\n  const response = await fetch('http://localhost:5000/datas');\n  const data = await response.json();\n  return data;\n};\n\n// const handleSpecial = async () => {\n//   const response = await fetch('http://localhost:5000/data')\n//   const data = await response.json()\n//   const filterSets = data.setlist.filter(set => set.sets !== undefined)\n//   const sets = filterSets.map(set => set.sets)\n//   const nonEmptySets = sets.filter(set => set.set.length > 0)\n//   const set = nonEmptySets.map(set => set.set[9].song)\n//   const name = set.map(song => song.map(song => song.name))\n//   const nameFlat = name.flat()\n//   const nameLowercase = nameFlat.map(song => song.toLowerCase())\n//   console.log(nameLowercase)\n//   return nameLowercase\n// }\n\nconst putAlbum = async album => {\n  const response = await fetch(`http://localhost:3000/albums/${album.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(album)\n  });\n  console.log(response);\n  const data = await response.json();\n  return data;\n};\n\n// patchAlbum()\n\nexport { handleAlbums, handleData, putAlbum };","map":{"version":3,"names":["handleAlbums","response","fetch","data","json","handleData","putAlbum","album","id","method","headers","body","JSON","stringify","console","log"],"sources":["/Users/brenda/code/brenda-daroz/eras-tour/src/services/handleAlbums.js"],"sourcesContent":["const handleAlbums = async () => {\n  const response = await fetch('http://localhost:3000/albums')\n  const data = await response.json()\n  return data\n}\n\nconst handleData = async () => {\n  const response = await fetch('http://localhost:5000/datas')\n  const data = await response.json()\n  return data\n}\n\n// const handleSpecial = async () => {\n//   const response = await fetch('http://localhost:5000/data')\n//   const data = await response.json()\n//   const filterSets = data.setlist.filter(set => set.sets !== undefined)\n//   const sets = filterSets.map(set => set.sets)\n//   const nonEmptySets = sets.filter(set => set.set.length > 0)\n//   const set = nonEmptySets.map(set => set.set[9].song)\n//   const name = set.map(song => song.map(song => song.name))\n//   const nameFlat = name.flat()\n//   const nameLowercase = nameFlat.map(song => song.toLowerCase())\n//   console.log(nameLowercase)\n//   return nameLowercase\n// }\n\nconst putAlbum = async (album) => {\n  const response = await fetch(`http://localhost:3000/albums/${album.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(album)\n  })\n  console.log(response)\n  const data = await response.json()\n  return data\n}\n\n// patchAlbum()\n\n\nexport { handleAlbums, handleData, putAlbum }\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI;AACb,CAAC;AAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;EAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,QAAQ,GAAG,MAAOC,KAAK,IAAK;EAChC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BK,KAAK,CAACC,EAAG,EAAC,EAAE;IACvEC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK;EAC5B,CAAC,CAAC;EACFO,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;EACrB,MAAME,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI;AACb,CAAC;;AAED;;AAGA,SAASH,YAAY,EAAEK,UAAU,EAAEC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}